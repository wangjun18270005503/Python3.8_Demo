# -*- coding: utf-8 -*- 
# @Project ：pythonProject2 
# @Time : 2022/3/28 18:05 
# @Author : J.wang 
# @Version：V 0.1 
# @File : points_demo.py
# @Software: PyCharm
# @desc : 绑定某个点位经纬度是否属于某个范围

from shapely.geometry import Point
from shapely.geometry.polygon import Polygon
from io import StringIO
import numpy as np


# poly = '''[[[118.6106736941357,28.725665521047006],[118.60968794004646,28.72461244460868],[118.60890365388059,28.723792002998607],[118.60848676415287,28.723384637990705],[118.60833447835353,28.72352360123324],[118.60823168584363,28.72361687801657],[118.60814792748488,28.723689214985313],[118.60758637011497,28.723885288775136],[118.60716358173397,28.724048723469878],[118.60713649505328,28.724057258036055],[118.60699753450865,28.72426855734807],[118.60736786363611,28.725306654678434],[118.60743447462141,28.725399693141355],[118.60747559252468,28.725465937203296],[118.60753346389833,28.725675940592225],[118.60727762206466,28.725879245830583],[118.60704310045878,28.72585106557426],[118.60702908362532,28.725847948524063],[118.6069005075525,28.725841227890385],[118.60671014805496,28.725807726345522],[118.60663248170374,28.725784884464872],[118.6065738513023,28.72575138112137],[118.60650760544172,28.725615084368712],[118.60643755095225,28.725375994206843],[118.60633418377563,28.725075227639707],[118.60630372553658,28.724930554601485],[118.60624280995773,28.72482014663251],[118.606181894379,28.724763039682614],[118.60591729494729,28.724700222936974],[118.60576881417944,28.724658345106604],[118.60561081588651,28.724608853615734],[118.60545472055901,28.724563167156475],[118.6053233727755,28.72452509705562],[118.60504164035945,28.724502256074288],[118.6048574376207,28.724459154266583],[118.60468040427725,28.72440661587268],[118.60450793769121,28.72432095544781],[118.60432600304262,28.724196202392875],[118.60698491342305,28.72146159517655],[118.6070293030599,28.721501052031954],[118.60705733312943,28.721525966849924],[118.60778689375024,28.722344040545067],[118.6088168621086,28.723422289007488],[118.60923528697901,28.72316479601858],[118.60915750281652,28.723065554931452],[118.60916018459488,28.72285097848993],[118.6083528398118,28.722024858560417],[118.60845369248398,28.72172273221838],[118.60847532207856,28.721666532684367],[118.608610096279,28.721712979970107],[118.60905629940873,28.721869832526806],[118.60970047659578,28.722074653122775],[118.61026470225431,28.72227033840545],[118.61064998980521,28.722408155012374],[118.61073298643828,28.72242338323258],[118.61086517238982,28.72239003097519],[118.61103649413894,28.722265535126382],[118.61124962536996,28.722075819543477],[118.61140225471036,28.72202065782716],[118.61153836080678,28.721986391858536],[118.61187053889432,28.72198543857718],[118.61246065153784,28.722000662300786],[118.61320308505435,28.722005725483882],[118.61343529000669,28.722013027978903],[118.61350477162796,28.722029207681828],[118.61354569887499,28.72204158055456],[118.61370560103273,28.72214627692921],[118.61382076911332,28.722279527678097],[118.61388358855686,28.722415633774517],[118.61400066140152,28.72262217297498],[118.61409679443159,28.722784928681563],[118.61415381504662,28.72290171374317],[118.61433512196834,28.723115893583667],[118.61444520168482,28.72323673278902],[118.61461552698506,28.723365520202663],[118.61483591034903,28.723533525252037],[118.61501627478128,28.72369499672675],[118.61469090006506,28.723776340405834],[118.61427630720584,28.72382843633335],[118.61426780951183,28.723829503828597],[118.61369891097604,28.723900990938034],[118.61314058307153,28.723829984965903],[118.61292716046012,28.723915357607723],[118.61209263007083,28.72460827085507],[118.61151546586609,28.725103208246537],[118.61117434402081,28.725352962569218],[118.61093525385888,28.72553418675335],[118.61070574507414,28.725702638765824],[118.6106736941357,28.725665521047006]]]'''

poly = '''
98.2 27
101 27
102.8 29.2
98.2 29.2
'''


def points(lats, lons):
    pg = Polygon(np.genfromtxt(StringIO(poly))) # 生成Polygon实例
    return np.array([pg.contains(Point(lo, la)) for lo, la in zip(lons, lats)]) # 判断所有输入的点是否在poly内，返回np.array


p = np.array([[28, 100], [44, 120]])
print(points(p[:, 0], p[:, 1]))